dataset = dataset[3:5]
View(dataset)
View(dataset)
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
model <- naiveBayes(dataset$Purchased ~ ., data = dataset[training_set,])
install.packages("naivebayes")
install.packages("e1071")
library(e1071)
library(naivebayes)
getwd()
setwd("/Users/fernando/Documents/mineria/mineria_datos/Unidad2/Examen")
getwd()
dataset <- read.csv("Social_Network_Ads.csv")
dataset = dataset[3:5]
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
install.packages("naivebayes")
install.packages("e1071")
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
model <- naiveBayes(dataset$Purchased ~ ., data = dataset[training_set,])
model <- naiveBayes(dataset$Purchased ~ ., data = training_set)
mod <- naiveBayes(Purchased ~ ., data = trainData)
mod <- naiveBayes(Purchased ~ ., data = training_set)
mod
pred <- predict(mod, test_set)
tab <- table(dataset$Purchased, pred, dnn = c("Actual", "Predicha"))
tab <- table(Purchased, pred, dnn = c("Actual", "Predicha"))
tab <- table(dataset$Purchased, pred, dnn = c("Actual", "Predicha"))
View(test_set)
View(test_set)
tab <- table(dataset$Purchased, pred)
View(training_set)
mod
pred <- predict(mod, test_set)
tab <- table(dataset$Purchased, pred)
tab <- table(dataset$Purchased, pred, dnn = c("Actual", "Predicha"))
mod <- naiveBayes(Purchased ~ ., data = dataset)
mod
pred <- predict(mod, test_set)
tab <- table(dataset$Purchased, pred, dnn = c("Actual", "Predicha"))
tab <- table(pred, dataset$Purchased)
table(pred, dataset$Purchased)
pred <- predict(mod, dataset)
table(pred, dataset$Purchased)
pred <- predict(mod, test_set)
table(pred, dataset$Purchased)
dataset <- read.csv("Social_Network_Ads.csv")
View(dataset)
nb_default <- naiveBayes(ataset$Purchased ~., data=dataset[,-3])
default_pred <- predict(nb_default, test, type="class")
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
default_pred <- predict(nb_default, test_set, type="class")
getwd()
setwd("/Users/fernando/Documents/mineria/mineria_datos/Unidad2/Examen")
getwd()
dataset <- read.csv("Social_Network_Ads.csv")
dataset = dataset[3:5]
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
mod <- naiveBayes(Purchased ~ ., data = training_set)
mod
View(test_set)
pred <- predict(mod, test_set)
pred <- predict(mod, test_set[,-3])
pred
test_set$Prediccion <- pred
table(pred,training_set$Purchased)
pred <- predict(mod, test_set$Purchased)
table(pred,training_set$Purchased)
pred <- predict(mod, test_set$Purchased)
table(pred,training_set)
plot(mod)
training_set$Purchased = predict(mod)
repeating_sequence=rep.int(seq_len(nrow(dataset)), dataset$Freq)
getwd()
setwd("/Users/fernando/Documents/mineria/mineria_datos/Unidad2/Examen")
getwd()
dataset <- read.csv("Social_Network_Ads.csv")
dataset = dataset[3:5]
repeating_sequence=rep.int(seq_len(nrow(dataset)), dataset$Freq)
mod <- naiveBayes(Purchased ~ ., data = training_set)
mod
pred <- predict(mod, dataset)
table(pred,dataset$Purchased)
mod <- naiveBayes(as.factor(Purchased) ~ ., data = training_set)
mod
pred <- predict(mod, dataset)
matrix <- table(pred,dataset$Purchased)
plot(cMatrix)
plot(matrix)
confusionMatrix(matrix)
matrix
matrix <- table(pred,test_set$Purchased)
matrix <- table(pred,training_set$Purchased)
matrix <- table(pred,dataset$Purchased)
matrix
getwd()
setwd("/Users/fernando/Documents/mineria/mineria_datos/Unidad2/Examen")
getwd()
dataset <- read.csv("Social_Network_Ads.csv")
dataset = dataset[3:5]
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
mod <- naiveBayes(Purchased ~ ., data = training_set)
mod
pred <- predict(mod, dataset)
matrix <- table(pred,dataset$Purchased)
getwd()
setwd("/Users/fernando/Documents/mineria/mineria_datos/Unidad2/Examen")
getwd()
dataset <- read.csv("Social_Network_Ads.csv")
dataset = dataset[3:5]
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
mod <- naiveBayes(Purchased ~ ., data = training_set)
mod
pred <- predict(mod, test_set)
matrix <- table(test_set$Purchased pred, dnn = c("Actual", "Predicha"))
getwd()
setwd("/Users/fernando/Documents/mineria/mineria_datos/Unidad2/Examen")
getwd()
dataset <- read.csv("Social_Network_Ads.csv")
dataset = dataset[3:5]
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
mod <- naiveBayes(as.factor(Purchased) ~ ., data = training_set)
mod
pred <- predict(mod, dataset)
matrix <- table(pred,dataset$Purchased)
matrix
getwd()
setwd("/Users/fernando/Documents/mineria/mineria_datos/Unidad2/Examen")
getwd()
dataset <- read.csv("Social_Network_Ads.csv")
dataset = dataset[3:5]
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
mod <- naiveBayes(as.factor(Purchased) ~ ., data = training_set)
mod
pred <- predict(mod, test_set)
matrix <- table(pred,test_set$Purchased)
matrix
mod
library(caret)
install.packages("caret")
library(caret)
confusionMatrix(matrix)
library(ElemStatLearn)
set = training_set
X1 = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01)
X2 = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01)
grid_set = expand.grid(X1, X2)
colnames(grid_set) = c('Age', 'EstimatedSalary')
y_grid = knn(train = training_set[, -3], test = grid_set, cl = training_set[, 3], k = 5)
plot(set[, -3],
main = 'K-NN (Training set)',
xlab = 'Age', ylab = 'Estimated Salary',
xlim = range(X1), ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2)), add = TRUE)
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
library(ElemStatLearn)
set = test_set
X1 = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01)
X2 = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01)
grid_set = expand.grid(X1, X2)
colnames(grid_set) = c('Age', 'EstimatedSalary')
y_grid = knn(train = training_set[, -3], test = grid_set, cl = training_set[, 3], k = 5)
plot(set[, -3],
main = 'K-NN (Test set)',
xlab = 'Age', ylab = 'Estimated Salary',
xlim = range(X1), ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2)), add = TRUE)
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
mod
dataset %>% ggplot(aes(dataset$Age,fill=dataset$Purchased))+
geom_density(alpha=.6)+
ggtitle("Density Plot GRE vs admit")
dataset <- ggplot(aes(dataset$Age,fill=dataset$Purchased))+
geom_density(alpha=.6)+
ggtitle("Density Plot GRE vs admit")
plot(mod, vars, n = 1000, legendplot = TRUE, lty, col,
ylab = "Density", main = "Naive Bayes Plot")
r <- plot(mod, vars, n = 1000, legendplot = TRUE, lty, col,
ylab = "Density", main = "Naive Bayes Plot")
r <- ggplot(mod, vars, n = 1000, legendplot = TRUE, lty, col,
ylab = "Density", main = "Naive Bayes Plot")
data <- ggplot(aes(mod,fill=test_set$Purchased))+
geom_density(alpha=.6)+
ggtitle("Density Plot GRE vs admit")
?ggplot
moviesExam <- ggplot(mod, aes(x=test_set$Age, y=test_set$EstimatedSalary,
size=test_set$Purchased))
moviesExam <- ggplot(dataset, aes(x=test_set$Age, y=test_set$EstimatedSalary,
size=test_set$Purchased))
moviesExam
moviesExam <- ggplot(dataset, x=test_set$Age, y=test_set$EstimatedSalary,
size=test_set$Purchased))
p <- ggplot(dataset, aes(dataset$Age, dataset$EstimatedSalary))
p + geom_point(aes(colour = factor(dataset$Purchased))) + geom_abline(intercept=0, slope=1)
pred
matrix <- table(pred,test_set$Purchased)
confusionMatrix(matrix)
cfm <- confusionMatrix(matrix, test_set$Purchased)
cfm <- confusionMatrix(matrix, Purchased)
matrix
pred <- predict(mod, test_set[,!Age(training_set)] %in% "Purchased")
pred <- predict(mod, test_set[,!test_set$Age(training_set)] %in% "Purchased")
getwd()
setwd("/Users/fernando/Documents/mineria/mineria_datos/Unidad2/Examen")
getwd()
dataset <- read.csv("Social_Network_Ads.csv")
dataset = dataset[3:5]
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
training_set[-3] = scale(training_set[-3])
test_set[-3] = scale(test_set[-3])
View(test_set)
View(test_set)
mod <- naiveBayes(as.factor(Purchased) ~ ., data = training_set)
mod
pred <- predict(mod, test_set)
matrix <- table(pred,test_set$Purchased)
confusionMatrix(matrix, test_set$Purchased)
getwd()
setwd("/Users/fernando/Documents/mineria/mineria_datos/Unidad2/Examen")
getwd()
dataset <- read.csv("Social_Network_Ads.csv")
dataset = dataset[3:5]
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
mod <- naiveBayes(as.factor(Purchased) ~ ., data = training_set)
mod
pred <- predict(mod, test_set)
matrix <- table(pred,test_set$Purchased)
confusionMatrix(matrix, test_set$Purchased)
getwd()
setwd("/Users/fernando/Documents/mineria/mineria_datos/Unidad2/Examen")
getwd()
dataset <- read.csv("Social_Network_Ads.csv")
dataset = dataset[3:5]
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
mod <- naiveBayes(as.factor(Purchased) ~ ., data = training_set)
mod
pred <- predict(mod, test_set)
matrix <- table(pred,test_set$Purchased)
confusionMatrix(matrix, test_set$Purchased)
getwd()
setwd("/Users/fernando/Documents/mineria/mineria_datos/Unidad2/Examen")
getwd()
dataset <- read.csv("Social_Network_Ads.csv")
dataset = dataset[3:5]
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
mod <- naiveBayes(as.factor(Purchased) ~ ., data = training_set)
mod
pred <- predict(mod, test_set)
matrix <- table(pred,test_set$Purchased)
confusionMatrix(matrix, test_set$Purchased)
library(caret)
confusionMatrix(matrix, test_set$Purchased)
confusionMatrix(matrix, test_set)
confusionMatrix(matrix)
getwd()
setwd("/Users/fernando/Documents/mineria/mineria_datos/Unidad2/Examen")
getwd()
dataset <- read.csv("Social_Network_Ads.csv")
dataset = dataset[3:5]
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
mod <- naiveBayes(as.factor(Purchased) ~ ., data = training_set)
mod
pred <- predict(test_set[,-3],mod)
getwd()
setwd("/Users/fernando/Documents/mineria/mineria_datos/Unidad2/Examen")
getwd()
dataset <- read.csv("Social_Network_Ads.csv")
dataset = dataset[3:5]
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
mod <- naiveBayes(as.factor(Purchased) ~ ., data = training_set)
mod
pred <- predict(mod, test_set)
matrix <- table(test_set[,-3], pred)
matrix <- table(test_set[,-3], pred[,-3])
matrix <- table(test_set[,-3], pred[,3])
matrix <- table(pred,test_set$Purchased)
confusionMatrix(matrix)
ggplot(data = dataset, aes(x = dataset$Age, y = dataset$EstimatedSalary, fill = dataset$Purchased)) +
geom_bar() +
scale_fill_manual(values = c("gray50", "orangered2")) +
labs(title = "Supervivencia") +
theme_bw() +
theme(legend.position = "bottom")
ggplot(data = dataset, aes(x = dAge, y = EstimatedSalary, fill = Purchased)) +
geom_bar() +
scale_fill_manual(values = c("gray50", "orangered2")) +
labs(title = "Supervivencia") +
theme_bw() +
theme(legend.position = "bottom")
ggplot(data = dataset, aes(x = Age, y = EstimatedSalary, fill = Purchased)) +
geom_bar() +
scale_fill_manual(values = c("gray50", "orangered2")) +
labs(title = "Supervivencia") +
theme_bw() +
theme(legend.position = "bottom")
ggplot(data = dataset, aes(x = Age, y = EstimatedSalary, fill = Purchased)) +
geom_bar() +
scale_fill_manual(values = c("gray50", "orangered2")) +
labs(title = "Supervivencia") +
theme_bw() +
theme(legend.position = "bottom")
getwd()
setwd("/Users/fernando/Documents/mineria/mineria_datos/Unidad2/Examen")
getwd()
dataset <- read.csv("Social_Network_Ads.csv")
dataset = dataset[3:5]
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
mod <- naiveBayes(as.factor(Purchased) ~ ., data = training_set)
mod
pred <- predict(mod, test_set)
matrix <- table(pred,test_set$Purchased)
confusionMatrix(matrix)
ggplot(data = dataset, aes(x = Age, y = EstimatedSalary, fill = Purchased)) +
geom_bar() +
scale_fill_manual(values = c("gray50", "orangered2")) +
labs(title = "Supervivencia") +
theme_bw() +
theme(legend.position = "bottom")
ggplot(data = dataset, aes(x=Age, y=EstimatedSalary, fill = Purchased)) +
geom_bar() +
scale_fill_manual(values = c("gray50", "orangered2")) +
labs(title = "Supervivencia") +
theme_bw() +
theme(legend.position = "bottom")
plot(mod)
plot(test_set$Age,test_set$EstimatedSalary)
plot(test_set$Age,test_set$EstimatedSalary, xlabel = "Estimated Salary", ylabel = "Age")
plot(test_set$Age,test_set$EstimatedSalary, "Estimated Salary",  "Age")
plot(test_set$Age,test_set$EstimatedSalary, xlabel="Estimated Salary",  ylabel="Age")
plot(test_set,mod )
plot(mod, test_set$Purchased )
plot(test_set$Purchased, mod)
plot(test_set, mod)
plot(test_set, mod)
plot(test_set$Purchased, mod)
plot(test_set$Age, test_set$EstimatedSalary, mod)
plot(x=test_set$Age, y=test_set$EstimatedSalary, mod)
plot(mod)
plot(mod, test_set$Purchased)
plot(mod, coords(test_set$Age, test_set$EstimatedSalary))
plot(mod, (test_set$Age, test_set$EstimatedSalary))
plot(mod, "Purchased", prob = "conditional")
getwd()
setwd("/Users/fernando/Documents/mineria/mineria_datos/Unidad2/Examen")
getwd()
dataset <- read.csv("Social_Network_Ads.csv")
dataset = dataset[3:5]
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
mod <- naiveBayes(Purchased ~ ., data = training_set)
mod
pred <- predict(mod, test_set)
matrix <- table(pred,test_set$Purchased)
matrix <- table(pred,test_set)
mod <- naiveBayes(Purchased ~ ., data = training_set[,-3])
results_prob = data.frame(t(attributes(pred)$Purchased))
results_prob = data.frame(t(attributes(pred)$pred))
pred <- predict(mod, test_set)
results_prob = data.frame(t(attributes(pred)$pred))
results_prob = data.frame(t(attributes(pred)test_set$Purchased))
dataset$Purchased <- predict(mod, test_set, type = "class")
dataset$Purchased <- predict(mod, test_set)
test_set$Purchased <- predict(mod, test_set)
training_set$Purchased <- predict(mod, test_set)
getwd()
setwd("/Users/fernando/Documents/mineria/mineria_datos/Unidad2/Examen")
getwd()
dataset <- read.csv("Social_Network_Ads.csv")
dataset = dataset[3:5]
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
mod <- naiveBayes(as.factor(Purchased) ~ ., data = training_set)
mod
training_set$Purchased <- predict(mod, test_set)
print(training_set)
getwd()
setwd("/Users/fernando/Documents/mineria/mineria_datos/Unidad2/Examen")
getwd()
dataset <- read.csv("Social_Network_Ads.csv")
dataset = dataset[3:5]
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
mod <- naiveBayes(as.factor(Purchased) ~ ., data = training_set)
mod
training_set <- predict(mod, test_set, type="class")
print(training_set)
print(training_set)
training_set <- predict(mod, test_set)
print(training_set)
getwd()
setwd("/Users/fernando/Documents/mineria/mineria_datos/Unidad2/Examen")
getwd()
dataset <- read.csv("Social_Network_Ads.csv")
dataset = dataset[3:5]
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
mod <- naiveBayes(as.factor(Purchased) ~ ., data = training_set[,-3])
mod <- naiveBayes(Purchased ~ ., data = training_set[,-3])
matrix <- table(pred,test_set$Purchased, c("Prediction","Purchased"))
getwd()
setwd("/Users/fernando/Documents/mineria/mineria_datos/Unidad2/Examen")
getwd()
dataset <- read.csv("Social_Network_Ads.csv")
dataset = dataset[3:5]
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
mod <- naiveBayes(as.factor(Purchased) ~ ., data = training_set)
mod
pred <- predict(mod, test_set)
print(training_set)
matrix <- table(pred,test_set$Purchased, c("Prediction","Purchased"))
getwd()
setwd("/Users/fernando/Documents/mineria/mineria_datos/Unidad2/Examen")
getwd()
dataset <- read.csv("Social_Network_Ads.csv")
dataset = dataset[3:5]
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
mod <- naiveBayes(as.factor(Purchased) ~ ., data = training_set)
mod
pred <- predict(mod, test_set)
matrix <- table(pred,test_set$Purchased)
pred
matrix <- table(pred,test_set$Purchased)
matrix
plot(matrix)
